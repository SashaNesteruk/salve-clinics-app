{"ast":null,"code":"import { MatSort } from '@angular/material/sort';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./clinics.service\";\nimport * as i3 from \"@angular/cdk/a11y\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/table\";\nimport * as i7 from \"@angular/material/sort\";\n\nfunction AppComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const clinic_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", clinic_r11.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", clinic_r11.name, \" \");\n  }\n}\n\nfunction AppComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 18);\n    i0.ɵɵtext(1, \" No. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r12.patientNumber, \" \");\n  }\n}\n\nfunction AppComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 20);\n    i0.ɵɵtext(1, \" First Name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r13.firstName, \" \");\n  }\n}\n\nfunction AppComponent_th_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 20);\n    i0.ɵɵtext(1, \" LastName \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r14.lastName, \" \");\n  }\n}\n\nfunction AppComponent_th_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1, \" Date of Birth \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r15.dateOfBirth, \" \");\n  }\n}\n\nfunction AppComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 22);\n  }\n}\n\nfunction AppComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 23);\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(http, clinicService, _liveAnnouncer) {\n      this.http = http;\n      this.clinicService = clinicService;\n      this.title = 'salve-clinics-app';\n      this.clinics = [];\n      this.patients = [];\n      this.displayedColumns = ['patientNumber', 'firstName', 'lastName', 'dateOfBirth'];\n      this.dataSource = [];\n      this.sort = new MatSort();\n      this._liveAnnouncer = _liveAnnouncer;\n    }\n\n    ngAfterViewInit() {\n      this.dataSource.sort = this.sort;\n    }\n\n    announceSortChange(sortState) {\n      if (sortState.direction) {\n        this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n      } else {\n        this._liveAnnouncer.announce('Sorting cleared');\n      }\n    }\n\n    ngOnInit() {\n      this.getClinics();\n    }\n\n    getClinics() {\n      this.clinicService.getClinics().subscribe(clinics => this.clinics = clinics);\n    }\n\n    getPatientsForClinic() {\n      this.clinicService.getPatientsForClinic(this.selectedClinic).subscribe(x => {\n        this.dataSource = [];\n        this.patients = x.patients;\n        this.patients.forEach(e => {\n          this.dataSource.push({\n            patientNumber: e.patientNumber,\n            firstName: e.firstName,\n            lastName: e.lastName,\n            dateOfBirth: e.dateOfBirth\n          });\n        });\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ClinicsService), i0.ɵɵdirectiveInject(i3.LiveAnnouncer));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 22,\n    vars: 5,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-sm-6\"], [3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [2, \"flex\", \"1 1 0px\"], [\"mat-table\", \"\", \"matSort\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\", \"matSortChange\"], [\"matColumnDef\", \"patientNumber\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"sortActionDescription\", \"Sort by number\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"firstName\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"lastName\"], [\"matColumnDef\", \"dateOfBirth\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [3, \"value\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"sortActionDescription\", \"Sort by number\"], [\"mat-cell\", \"\"], [\"mat-header-cell\", \"\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"select\", 3);\n        i0.ɵɵlistener(\"change\", function AppComponent_Template_select_change_3_listener() {\n          return ctx.getPatientsForClinic();\n        })(\"ngModelChange\", function AppComponent_Template_select_ngModelChange_3_listener($event) {\n          return ctx.selectedClinic = $event;\n        });\n        i0.ɵɵtemplate(4, AppComponent_option_4_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(5, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"table\", 6);\n        i0.ɵɵlistener(\"matSortChange\", function AppComponent_Template_table_matSortChange_7_listener($event) {\n          return ctx.announceSortChange($event);\n        });\n        i0.ɵɵelementContainerStart(8, 7);\n        i0.ɵɵtemplate(9, AppComponent_th_9_Template, 2, 0, \"th\", 8);\n        i0.ɵɵtemplate(10, AppComponent_td_10_Template, 2, 1, \"td\", 9);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(11, 10);\n        i0.ɵɵtemplate(12, AppComponent_th_12_Template, 2, 0, \"th\", 11);\n        i0.ɵɵtemplate(13, AppComponent_td_13_Template, 2, 1, \"td\", 9);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(14, 12);\n        i0.ɵɵtemplate(15, AppComponent_th_15_Template, 2, 0, \"th\", 11);\n        i0.ɵɵtemplate(16, AppComponent_td_16_Template, 2, 1, \"td\", 9);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(17, 13);\n        i0.ɵɵtemplate(18, AppComponent_th_18_Template, 2, 0, \"th\", 14);\n        i0.ɵɵtemplate(19, AppComponent_td_19_Template, 2, 1, \"td\", 9);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(20, AppComponent_tr_20_Template, 1, 0, \"tr\", 15);\n        i0.ɵɵtemplate(21, AppComponent_tr_21_Template, 1, 0, \"tr\", 16);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedClinic);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.clinics);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dataSource\", ctx.patients);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      }\n    },\n    directives: [i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel, i5.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i6.MatTable, i7.MatSort, i6.MatColumnDef, i6.MatHeaderCellDef, i6.MatHeaderCell, i7.MatSortHeader, i6.MatCellDef, i6.MatCell, i6.MatHeaderRowDef, i6.MatHeaderRow, i6.MatRowDef, i6.MatRow],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}